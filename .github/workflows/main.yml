name: Deploy to DigitalOcean

on:
  push:
    branches: [ '*' ]   # Trigger on push to any branch
  workflow_dispatch:    # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test Docker build
      run: |
        echo "Testing Dockerfile build..."
        docker build -t test-image .
        echo "Docker build completed successfully!"
        
    - name: Test Docker Compose
      run: |
        echo "Testing Docker Compose..."
        docker compose config
        echo "Docker Compose configuration is valid!"

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Only deploy if tests pass
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch
    
    steps:
    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: ${{ secrets.DO_PORT || 22 }}
        script: |
          set -e  # Exit on any error
          
          echo "Starting deployment..."
          
          # Navigate to your project directory
          cd ../home/genesis/genesis-etl-service/ || { echo "Project directory not found"; exit 1; }
          
          # Pull latest changes from git
          echo "Pulling latest changes..."
          git pull origin main
          
          # Stop existing containers
          echo "Stopping existing containers..."
          docker compose down
          
          # Pull latest images (if using external images)
          echo "Pulling latest Docker images..."
          docker compose pull
          
          # Build and start containers with error handling
          echo "Building and starting containers..."
          if ! docker compose up -d --build; then
            echo "Docker compose failed! Rolling back..."
            docker compose down
            exit 1
          fi
          
          # Wait a moment for containers to start
          sleep 10
          
          # Health check - verify containers are running properly
          echo "Performing health check..."
          if ! docker compose ps | grep -q "Up"; then
            echo "Health check failed! Containers are not running properly"
            docker compose logs
            docker compose down
            exit 1
          fi
          
          # Check if containers are running
          echo "Checking container status..."
          docker compose ps
          
          # Clean up unused images and containers
          echo "Cleaning up unused Docker resources..."
          docker system prune -f
          
          echo "Deployment completed successfully!"
